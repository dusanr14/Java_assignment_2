/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package eeindex;

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Scanner;
import javax.swing.DefaultComboBoxModel;

/**
 *
 * @author Dusan
 */
public class EeIndex extends javax.swing.JFrame {

    /**
     * Creates new form EeIndex
     */
    private static final String USERS_FILE = "users.txt";
    private static final String SUBJECTS_FILE = "subjects.txt";
    private static final String STUDENTS_FILE = "students.txt";
    private static ArrayList<User> users = new ArrayList<>();
    private static ArrayList<Student> students = new ArrayList<>();
    private static ArrayList<Subject> subjects = new ArrayList<>();
    
    public EeIndex() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        labelSubjectMax = new javax.swing.JPanel();
        btnStart = new javax.swing.JButton();
        labelUsername = new javax.swing.JLabel();
        labelPassword = new javax.swing.JLabel();
        cbAdmin = new javax.swing.JCheckBox();
        tfUserName = new javax.swing.JTextField();
        tfPassword = new javax.swing.JTextField();
        btnConnect = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        taInfo = new javax.swing.JTextArea();
        labelAddStudent = new javax.swing.JLabel();
        labelStudName = new javax.swing.JLabel();
        labelStudLastName = new javax.swing.JLabel();
        labelStudJMBG = new javax.swing.JLabel();
        labelStudUsername = new javax.swing.JLabel();
        labelStudPassword = new javax.swing.JLabel();
        tbStudName = new javax.swing.JTextField();
        tbStudLastName = new javax.swing.JTextField();
        tbStudJMBG = new javax.swing.JTextField();
        tbStudUsername = new javax.swing.JTextField();
        tbStudPassword = new javax.swing.JTextField();
        btnAddStudent = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        labelUsernameAdmin = new javax.swing.JLabel();
        labelPasswordAdmin = new javax.swing.JLabel();
        tbUsername = new javax.swing.JTextField();
        tbPassword = new javax.swing.JTextField();
        btnAddAdmin = new javax.swing.JButton();
        labelSubj = new javax.swing.JLabel();
        tfSubjectName = new javax.swing.JTextField();
        labelSubjectName = new javax.swing.JLabel();
        labelSubjectParts = new javax.swing.JLabel();
        tfSubjectParts = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        tfSubjectMax = new javax.swing.JTextField();
        labelSubjMin = new javax.swing.JLabel();
        tfSubjMin = new javax.swing.JTextField();
        labelNumOfParts = new javax.swing.JLabel();
        tfNumOfParts = new javax.swing.JTextField();
        btnAddSubject = new javax.swing.JButton();
        cbSubjects = new javax.swing.JComboBox<>();
        btnAddToStd = new javax.swing.JButton();
        labelSelectStud = new javax.swing.JLabel();
        cbSelStud = new javax.swing.JComboBox<>();
        lIndex = new javax.swing.JLabel();
        tfIndex = new javax.swing.JTextField();
        btnCheckScore = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        btnStart.setText("Start");
        btnStart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnStartActionPerformed(evt);
            }
        });

        labelUsername.setText("username:");
        labelUsername.setEnabled(false);

        labelPassword.setText("password:");
        labelPassword.setEnabled(false);

        cbAdmin.setText("Administrator");
        cbAdmin.setEnabled(false);
        cbAdmin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbAdminActionPerformed(evt);
            }
        });

        tfUserName.setEnabled(false);

        tfPassword.setEnabled(false);

        btnConnect.setText("Connect");
        btnConnect.setEnabled(false);
        btnConnect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConnectActionPerformed(evt);
            }
        });

        taInfo.setColumns(20);
        taInfo.setRows(5);
        taInfo.setEnabled(false);
        jScrollPane1.setViewportView(taInfo);

        labelAddStudent.setBackground(new java.awt.Color(102, 255, 102));
        labelAddStudent.setText("Add new Student:");
        labelAddStudent.setEnabled(false);

        labelStudName.setText("Name:");
        labelStudName.setEnabled(false);

        labelStudLastName.setText("Last Name:");
        labelStudLastName.setEnabled(false);

        labelStudJMBG.setText("JMBG:");
        labelStudJMBG.setEnabled(false);

        labelStudUsername.setText("username:");
        labelStudUsername.setEnabled(false);

        labelStudPassword.setText("password:");
        labelStudPassword.setEnabled(false);

        tbStudName.setEnabled(false);

        tbStudLastName.setEnabled(false);

        tbStudJMBG.setEnabled(false);

        tbStudUsername.setEnabled(false);

        tbStudPassword.setEnabled(false);

        btnAddStudent.setText("Add student");
        btnAddStudent.setEnabled(false);
        btnAddStudent.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddStudentActionPerformed(evt);
            }
        });

        jLabel1.setText("Add new Administrator:");
        jLabel1.setEnabled(false);

        labelUsernameAdmin.setText("username:");
        labelUsernameAdmin.setEnabled(false);

        labelPasswordAdmin.setText("password:");
        labelPasswordAdmin.setEnabled(false);

        tbUsername.setEnabled(false);

        tbPassword.setEnabled(false);

        btnAddAdmin.setText("Add admin");
        btnAddAdmin.setEnabled(false);
        btnAddAdmin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddAdminActionPerformed(evt);
            }
        });

        labelSubj.setText("Add new Subject");
        labelSubj.setEnabled(false);

        tfSubjectName.setEnabled(false);

        labelSubjectName.setText("Name:");
        labelSubjectName.setEnabled(false);

        labelSubjectParts.setText("Subject parts:");
        labelSubjectParts.setEnabled(false);

        tfSubjectParts.setEnabled(false);

        jLabel3.setText("Subject parts max:");
        jLabel3.setEnabled(false);

        tfSubjectMax.setEnabled(false);

        labelSubjMin.setText("Subject parts min:");
        labelSubjMin.setEnabled(false);

        tfSubjMin.setEnabled(false);

        labelNumOfParts.setText("Num of parts");
        labelNumOfParts.setEnabled(false);

        tfNumOfParts.setEnabled(false);

        btnAddSubject.setText("Add subject");
        btnAddSubject.setEnabled(false);
        btnAddSubject.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddSubjectActionPerformed(evt);
            }
        });

        cbSubjects.setEnabled(false);

        btnAddToStd.setText("Add to student");
        btnAddToStd.setEnabled(false);

        labelSelectStud.setText("Selektruj studenta:");
        labelSelectStud.setEnabled(false);

        cbSelStud.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cbSelStud.setEnabled(false);

        lIndex.setText("Index:");
        lIndex.setEnabled(false);

        tfIndex.setEnabled(false);

        btnCheckScore.setText("Check subj score");
        btnCheckScore.setEnabled(false);
        btnCheckScore.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCheckScoreActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout labelSubjectMaxLayout = new javax.swing.GroupLayout(labelSubjectMax);
        labelSubjectMax.setLayout(labelSubjectMaxLayout);
        labelSubjectMaxLayout.setHorizontalGroup(
            labelSubjectMaxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(labelSubjectMaxLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(labelSubjectMaxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, labelSubjectMaxLayout.createSequentialGroup()
                        .addComponent(btnAddStudent, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(labelSelectStud, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(cbSelStud, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, labelSubjectMaxLayout.createSequentialGroup()
                        .addComponent(labelStudPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tbStudPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnAddSubject, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(labelSubjectMaxLayout.createSequentialGroup()
                        .addGroup(labelSubjectMaxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(labelSubjectMaxLayout.createSequentialGroup()
                                .addComponent(btnStart)
                                .addGap(18, 18, 18)
                                .addGroup(labelSubjectMaxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(cbAdmin)
                                    .addGroup(labelSubjectMaxLayout.createSequentialGroup()
                                        .addGroup(labelSubjectMaxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(labelPassword, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(labelUsername, javax.swing.GroupLayout.DEFAULT_SIZE, 63, Short.MAX_VALUE))
                                        .addGap(18, 18, 18)
                                        .addGroup(labelSubjectMaxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(tfUserName)
                                            .addComponent(tfPassword, javax.swing.GroupLayout.DEFAULT_SIZE, 110, Short.MAX_VALUE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(btnConnect, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(labelSubjectMaxLayout.createSequentialGroup()
                                .addGroup(labelSubjectMaxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(labelAddStudent, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(labelSubjectMaxLayout.createSequentialGroup()
                                        .addGroup(labelSubjectMaxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addComponent(lIndex, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(labelStudName, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(labelStudLastName, javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(labelStudJMBG, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(labelStudUsername, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 65, Short.MAX_VALUE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(labelSubjectMaxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(tbStudName)
                                            .addComponent(tbStudLastName)
                                            .addComponent(tbStudJMBG)
                                            .addComponent(tbStudUsername)
                                            .addComponent(tfIndex, javax.swing.GroupLayout.DEFAULT_SIZE, 95, Short.MAX_VALUE))))
                                .addGroup(labelSubjectMaxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(labelSubjectMaxLayout.createSequentialGroup()
                                        .addGap(18, 18, 18)
                                        .addComponent(labelSubjMin, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(labelSubjectMaxLayout.createSequentialGroup()
                                        .addGap(18, 18, 18)
                                        .addGroup(labelSubjectMaxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(labelSubjectMaxLayout.createSequentialGroup()
                                                .addGroup(labelSubjectMaxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(labelSubjectName, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(labelSubjectParts, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addGroup(labelSubjectMaxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                    .addComponent(tfSubjectName)
                                                    .addComponent(tfSubjectParts)
                                                    .addComponent(tfSubjectMax)
                                                    .addComponent(tfSubjMin, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                            .addGroup(labelSubjectMaxLayout.createSequentialGroup()
                                                .addComponent(labelNumOfParts, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGroup(labelSubjectMaxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                    .addGroup(labelSubjectMaxLayout.createSequentialGroup()
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                        .addComponent(labelSubj, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                    .addGroup(labelSubjectMaxLayout.createSequentialGroup()
                                                        .addGap(21, 21, 21)
                                                        .addComponent(tfNumOfParts)
                                                        .addGap(6, 6, 6))))))))
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(labelSubjectMaxLayout.createSequentialGroup()
                                .addGroup(labelSubjectMaxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, labelSubjectMaxLayout.createSequentialGroup()
                                        .addGroup(labelSubjectMaxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addComponent(labelPasswordAdmin, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(labelUsernameAdmin, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(labelSubjectMaxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(labelSubjectMaxLayout.createSequentialGroup()
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(tbPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, labelSubjectMaxLayout.createSequentialGroup()
                                                .addGap(4, 4, 4)
                                                .addComponent(tbUsername, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addGap(18, 18, 18)
                                        .addComponent(btnCheckScore, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, labelSubjectMaxLayout.createSequentialGroup()
                                        .addComponent(btnAddAdmin, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(cbSubjects, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(18, 18, 18)
                                .addComponent(btnAddToStd, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 18, Short.MAX_VALUE)))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 158, Short.MAX_VALUE)
                .addContainerGap())
        );
        labelSubjectMaxLayout.setVerticalGroup(
            labelSubjectMaxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(labelSubjectMaxLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(labelSubjectMaxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(labelSubjectMaxLayout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 359, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(80, 80, 80))
                    .addGroup(labelSubjectMaxLayout.createSequentialGroup()
                        .addGroup(labelSubjectMaxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(labelSubjectMaxLayout.createSequentialGroup()
                                .addGroup(labelSubjectMaxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(labelSubjectMaxLayout.createSequentialGroup()
                                        .addGroup(labelSubjectMaxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(btnStart)
                                            .addComponent(labelUsername)
                                            .addComponent(tfUserName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(labelSubjectMaxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(labelPassword)
                                            .addComponent(tfPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addComponent(btnConnect, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cbAdmin)
                                .addGap(4, 4, 4)
                                .addGroup(labelSubjectMaxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(labelAddStudent)
                                    .addComponent(labelSubj))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(labelSubjectMaxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(labelSubjectMaxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(labelStudName)
                                        .addComponent(tbStudName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(tfSubjectName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(labelSubjectName, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(labelStudLastName))
                            .addGroup(labelSubjectMaxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(tbStudLastName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(labelNumOfParts, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(tfNumOfParts, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(labelSubjectMaxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(labelStudJMBG)
                            .addComponent(tbStudJMBG, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(labelSubjectParts, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tfSubjectParts, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(labelSubjectMaxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tfSubjectMax, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lIndex)
                            .addComponent(tfIndex, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(labelSubjectMaxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(labelSubjMin, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tfSubjMin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(labelStudUsername)
                            .addComponent(tbStudUsername, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(labelSubjectMaxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnAddSubject)
                            .addComponent(labelStudPassword)
                            .addComponent(tbStudPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(labelSubjectMaxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(labelSelectStud)
                            .addComponent(cbSelStud, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnAddStudent))
                        .addGroup(labelSubjectMaxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(labelSubjectMaxLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(labelSubjectMaxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(cbSubjects, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btnAddToStd))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnCheckScore)
                                .addGap(48, 48, 48))
                            .addGroup(labelSubjectMaxLayout.createSequentialGroup()
                                .addGap(13, 13, 13)
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(labelSubjectMaxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(labelUsernameAdmin)
                                    .addComponent(tbUsername, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 10, Short.MAX_VALUE)
                                .addGroup(labelSubjectMaxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(labelPasswordAdmin)
                                    .addComponent(tbPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnAddAdmin)
                                .addContainerGap())))))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(61, 61, 61)
                .addComponent(labelSubjectMax, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(25, 25, 25))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(labelSubjectMax, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cbAdminActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbAdminActionPerformed
        // TODO add your handling code here:
 
    }//GEN-LAST:event_cbAdminActionPerformed

    private void btnStartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnStartActionPerformed
        // TODO add your handling code here:
        btnStart.setEnabled(false);
        labelUsername.setEnabled(true);
        labelPassword.setEnabled(true);
        cbAdmin.setEnabled(true);
        tfUserName.setEnabled(true);
        tfPassword.setEnabled(true);
        btnConnect.setEnabled(true);
        
    }//GEN-LAST:event_btnStartActionPerformed

    private void btnConnectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConnectActionPerformed
        // TODO add your handling code here:
        if(this.login(tfUserName.getText(),tfPassword.getText(),cbAdmin.isSelected()) == 1){
            taInfo.setEnabled(true);
            labelAddStudent.setEnabled(true);
            labelStudName.setEnabled(true);
            labelStudLastName.setEnabled(true);
            labelStudJMBG.setEnabled(true);
            labelStudUsername.setEnabled(true);
            labelStudPassword.setEnabled(true);
            tbStudName.setEnabled(true);
            tbStudLastName.setEnabled(true);
            tbStudJMBG.setEnabled(true);
            tbStudUsername.setEnabled(true);
            tbStudPassword.setEnabled(true);
            btnAddStudent.setEnabled(true);
            jLabel1.setEnabled(true);
            labelUsernameAdmin.setEnabled(true);
            labelPasswordAdmin.setEnabled(true);
            tbUsername.setEnabled(true);
            tbPassword.setEnabled(true);
            btnAddAdmin.setEnabled(true);
            labelSubj.setEnabled(true);
            tfSubjectName.setEnabled(true);
            labelSubjectName.setEnabled(true);
            labelSubjectParts.setEnabled(true);
            tfSubjectParts.setEnabled(true);
            jLabel3.setEnabled(true);
            tfSubjectMax.setEnabled(true);
            labelSubjMin.setEnabled(true);
            tfSubjMin.setEnabled(true);
            labelNumOfParts.setEnabled(true);
            tfNumOfParts.setEnabled(true);
            btnAddSubject.setEnabled(true);
            labelSelectStud.setEnabled(true);
            cbSelStud.setEnabled(true);
            lIndex.setEnabled(true);
            tfIndex.setEnabled(true);
            btnAddToStd.setEnabled(true);
            cbSubjects.setEnabled(true);
            cbSelStud.setEnabled(true);
        }else if(this.login(tfUserName.getText(),tfPassword.getText(),cbAdmin.isSelected()) == 2){
            //System.out.println("Student logged: ");
            cbSubjects.setEnabled(true);
            btnCheckScore.setEnabled(true);
            
        }
        
        ArrayList<String> cbSubj = new ArrayList<>();
        for (int i = 0; i < subjects.size(); i++) {
            cbSubj.add(subjects.get(i).getSubjectName());
        }
        cbSubjects.setModel(new DefaultComboBoxModel<String>(cbSubj.toArray(new String[0])));
        
        ArrayList<String> cbStud = new ArrayList<>();
        for (int i = 0; i < students.size(); i++) {
            cbStud.add(students.get(i).getIndex());
        }
        cbSelStud.setModel(new DefaultComboBoxModel<String>(cbStud.toArray(new String[0])));
        
        
    }//GEN-LAST:event_btnConnectActionPerformed

    private void btnAddAdminActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddAdminActionPerformed
        // TODO add your handling code here:
            if(!tbUsername.getText().equals("") && !tbPassword.getText().equals("")){
                String username = tbUsername.getText();
                String password = tbPassword.getText();
                User newUser = new User(username, password, "admin");
                users.add(newUser);
                saveUsers();
                System.out.println("New admin added.");
           }
    }//GEN-LAST:event_btnAddAdminActionPerformed

    private void btnAddSubjectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddSubjectActionPerformed
        // TODO add your handling code here:
        int tempSumCheck = 0;
        
        if(!tfSubjectName.getText().equals("") && !tfNumOfParts.getText().equals("") 
           && !tfSubjectParts.getText().equals("") && !tfSubjectMax.getText().equals("")
           && !tfSubjMin.getText().equals("")){
           String subjName = tfSubjectName.getText();
           int numOfParts = Integer.parseInt(tfNumOfParts.getText());
           
           ArrayList<String> partsName = new ArrayList<>();
           String[] tokensName = tfSubjectParts.getText().split(" ");
           for(int i = 0; i < numOfParts; i++){
               partsName.add(tokensName[i]);
           }
           
           ArrayList<Integer> maxSubject = new ArrayList<>();
           String[] tokensMax = tfSubjectMax.getText().split(" ");
           for(int i = 0; i < numOfParts; i++){
               maxSubject.add(Integer.parseInt(tokensMax[i]));
               tempSumCheck += Integer.parseInt(tokensMax[i]);
           }
           ArrayList<Integer> minSubject = new ArrayList<>();
           String[] tokensMin = tfSubjMin.getText().split(" ");
           for(int i = 0; i < numOfParts; i++){
               minSubject.add(Integer.parseInt(tokensMin[i]));
           }
           
           if(tempSumCheck == 100){
                Subject newSubject = new Subject(subjName, numOfParts, partsName, maxSubject, minSubject);
                subjects.add(newSubject);
                saveSubjects();
                cbSubjects.addItem(subjName);
                System.out.println("Subject "+ subjName +" added");
           }else{
               System.out.println("Adding subject failed. Summation of max points per part not 100!");
           }
        }
    }//GEN-LAST:event_btnAddSubjectActionPerformed

    private void btnAddStudentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddStudentActionPerformed
        // Add new student
        if(!tbStudName.getText().equals("") && !tbStudLastName.getText().equals("")
           && !tbStudJMBG.getText().equals("") && !tbStudUsername.getText().equals("")
           && !tbStudPassword.getText().equals("")){
            String name = tbStudName.getText();
            String lastName = tbStudLastName.getText();
            String JMBG = tbStudJMBG.getText();
            String index = tfIndex.getText();
            String userName = tbStudUsername.getText();
            String password = tbStudPassword.getText();
            if(checkIndex(index) && checkJmbg(JMBG)){
                Student stud = new Student(name, lastName, JMBG,index, userName, password);
                students.add(stud);
                saveStudents();
                User newUser = new User(userName, password, "student");
                users.add(newUser);
                saveUsers();
                System.out.println("Student"+ name +" "+ lastName + " added.");
            cbSelStud.addItem(index);
            }else{
                if(!checkIndex(index)){
                    System.out.println("Neispravan unos indeksa");
                }
                
            }
        }
        
    }//GEN-LAST:event_btnAddStudentActionPerformed

    private void btnCheckScoreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCheckScoreActionPerformed
        // TODO add your handling code here:
        String username = tfUserName.getText();
        Student stud = null;
        for(Student s: students){
            if(username.equals(s.getUserName())){
                stud = s;
                break;
            }
        }
        String message = new String();
        message ="Ime: "+ stud.getName() + "\n";
        message += "Prezime: "+stud.getLastName() + "\n";
        
        Subject subj = null;
        
        for(Subject subject: stud.getSubjects()){
            if(subject.getSubjectName().equals(cbSubjects.getSelectedItem().toString())){
                subj = subject;
                break;
            }
        }
        message += "Ime predmeta: "+subj.getSubjectName() + "\n";
        for(int i = 0; i < subj.getNumberOfParts(); i++){
            message += (i+1) + ". deo: "+ subj.getPartsName().get(i)+": " + subj.getObtainedPoints().get(i)+ "\n";
        }
        message += "Grade: "+subj.getGrade() + "\n";
        taInfo.setText(message);
    }//GEN-LAST:event_btnCheckScoreActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        loadUsers();
        loadSubjects();
        loadStudents();
        for(Subject subj: subjects){
            System.out.println(subj.printSubject());
        }
        for(Student st: students){
            st.printSubject();
        }
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EeIndex.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EeIndex.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EeIndex.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EeIndex.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new EeIndex().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddAdmin;
    private javax.swing.JButton btnAddStudent;
    private javax.swing.JButton btnAddSubject;
    private javax.swing.JButton btnAddToStd;
    private javax.swing.JButton btnCheckScore;
    private javax.swing.JButton btnConnect;
    private javax.swing.JButton btnStart;
    private javax.swing.JCheckBox cbAdmin;
    private javax.swing.JComboBox<String> cbSelStud;
    private javax.swing.JComboBox<String> cbSubjects;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lIndex;
    private javax.swing.JLabel labelAddStudent;
    private javax.swing.JLabel labelNumOfParts;
    private javax.swing.JLabel labelPassword;
    private javax.swing.JLabel labelPasswordAdmin;
    private javax.swing.JLabel labelSelectStud;
    private javax.swing.JLabel labelStudJMBG;
    private javax.swing.JLabel labelStudLastName;
    private javax.swing.JLabel labelStudName;
    private javax.swing.JLabel labelStudPassword;
    private javax.swing.JLabel labelStudUsername;
    private javax.swing.JLabel labelSubj;
    private javax.swing.JLabel labelSubjMin;
    private javax.swing.JPanel labelSubjectMax;
    private javax.swing.JLabel labelSubjectName;
    private javax.swing.JLabel labelSubjectParts;
    private javax.swing.JLabel labelUsername;
    private javax.swing.JLabel labelUsernameAdmin;
    private javax.swing.JTextArea taInfo;
    private javax.swing.JTextField tbPassword;
    private javax.swing.JTextField tbStudJMBG;
    private javax.swing.JTextField tbStudLastName;
    private javax.swing.JTextField tbStudName;
    private javax.swing.JTextField tbStudPassword;
    private javax.swing.JTextField tbStudUsername;
    private javax.swing.JTextField tbUsername;
    private javax.swing.JTextField tfIndex;
    private javax.swing.JTextField tfNumOfParts;
    private javax.swing.JTextField tfPassword;
    private javax.swing.JTextField tfSubjMin;
    private javax.swing.JTextField tfSubjectMax;
    private javax.swing.JTextField tfSubjectName;
    private javax.swing.JTextField tfSubjectParts;
    private javax.swing.JTextField tfUserName;
    // End of variables declaration//GEN-END:variables

    private static int login(String username, String password, boolean role) {
        int temp = 0;
        for (User user : users) {
            if (user.getUsername().equals(username) && user.getPassword().equals(password)) {
                if(user.getRole().equals("admin") && role == true){
                    System.out.println("Admin looged in.");
                    temp = 1;
                }else if(user.getRole().equals("student") && role == false){
                    System.out.println("Student logged in.");
                    temp = 2;
                }
            }
        }
        
        if(temp == 0){
            System.out.println("Login failed.");
        }
        return temp;
    }

    private static void loadUsers() {
        try (BufferedReader reader = new BufferedReader(new FileReader(USERS_FILE))) {
            String line;
            while ((line = reader.readLine()) != null) {
                String[] tokens = line.split(":");
                String username = tokens[0];
                String password = tokens[1];
                String role = tokens[2];
                User user = new User(username, password, role);
                users.add(user);
            }
        } catch (IOException e) {
            System.err.println("Error loading users: " + e.getMessage());
        }
    }

    private static void saveUsers() {
        try (BufferedWriter writer = new BufferedWriter(new FileWriter(USERS_FILE))) {
            for (User user : users) {
                writer.write(user.getUsername() + ":" + user.getPassword() + ":" + user.getRole());
                writer.newLine();
            }
        } catch (IOException e) {
            System.err.println("Error saving users: " + e.getMessage());
        }
    }
    
    private static void loadSubjects() {
        try (BufferedReader reader = new BufferedReader(new FileReader(SUBJECTS_FILE))) {
            String line;
            while ((line = reader.readLine()) != null) {
                String[] tokens = line.split(" ");
                String subject_name = tokens[0];
                int numOfParts = Integer.parseInt(tokens[1]);
                ArrayList<String> partsName = new ArrayList<>();
                ArrayList<Integer> minPoints = new ArrayList<>();
                ArrayList<Integer> maxPoints = new ArrayList<>();
                for(int i = 0; i < numOfParts; i++){
                    partsName.add(tokens[i+2]);
                }
                for(int i = 0; i < numOfParts; i++){
                    minPoints.add(Integer.parseInt(tokens[i+2+numOfParts]));
                }
                for(int i = 0; i < numOfParts ; i++){
                    maxPoints.add(Integer.parseInt(tokens[i+2+2*numOfParts]));
                }
                Subject subj = new Subject(subject_name, numOfParts,partsName, minPoints, maxPoints);
                subjects.add(subj);
            }
        } catch (IOException e) {
            System.err.println("Error loading users: " + e.getMessage());
        }
    }
    
    private static void saveSubjects() {
        try (BufferedWriter writer = new BufferedWriter(new FileWriter(SUBJECTS_FILE))) {
            
            for (Subject sub : subjects) {
                String sub_string = sub.getSubjectName()+" "+ sub.getNumberOfParts();
                for(int i = 0; i < sub.getNumberOfParts(); i++){
                    sub_string+=" " + sub.getPartsName().get(i);
                }
                for(int i = 0; i < sub.getNumberOfParts(); i++){
                    sub_string+=" " + sub.getMaxPoints().get(i);
                }
                for(int i = 0; i < sub.getNumberOfParts(); i++){
                    sub_string+=" " + sub.getMinPoints().get(i);
                }
                writer.write(sub_string);
                writer.newLine();
            }
        } catch (IOException e) {
            System.err.println("Error saving users: " + e.getMessage());
        }
    }
    
    private static void loadStudents() {
        try (BufferedReader reader = new BufferedReader(new FileReader(STUDENTS_FILE))) {
            String line;
            int offset = 6;
            while ((line = reader.readLine()) != null) {
                String[] tokens = line.split(" ");
                String name = tokens[0];
                String lastName = tokens[1];
                String jmbg = tokens[2];
                String index = tokens[3];
                String userName = tokens[4];
                String password = tokens[5];
                int numOfSubjects = Integer.parseInt(tokens[6]);
                ArrayList<Subject> subj = new ArrayList<>();
                offset = 7;
                for(int j = 0; j < numOfSubjects; j++){
                    String subject_name = tokens[offset++];
                    int numOfParts = Integer.parseInt(tokens[offset++]);
                    
                    ArrayList<String> partsName = new ArrayList<>();
                    ArrayList<Integer> minPoints = new ArrayList<>();
                    ArrayList<Integer> maxPoints = new ArrayList<>();
                    ArrayList<Integer> obtainedPoints = new ArrayList<>();
                    
                    for(int i = 0; i < numOfParts; i++){
                        partsName.add(tokens[offset++]);
                    }
                    for(int i = 0; i < numOfParts; i++){
                        maxPoints.add(Integer.parseInt(tokens[offset++]));
                    }
                    for(int i = 0; i < numOfParts ; i++){
                        minPoints.add(Integer.parseInt(tokens[offset++]));
                    }
                    for(int i = 0; i < numOfParts ; i++){
                        obtainedPoints.add(Integer.parseInt(tokens[offset++]));
                    }
                    int grade = Integer.parseInt(tokens[offset++]);
                    Subject subjTemp = new Subject(subject_name,numOfParts,partsName,minPoints,maxPoints,
                                                  obtainedPoints, grade);
                    subj.add(subjTemp);
                }
                Student stud_temp = new Student(name,lastName,jmbg,index, userName,password, numOfSubjects, subj);
                students.add(stud_temp);
            }
        } catch (IOException e) {
            System.err.println("Error loading users: " + e.getMessage());
        }
    }
    
    private static void saveStudents() {
        try (BufferedWriter writer = new BufferedWriter(new FileWriter(STUDENTS_FILE))) {
            for (Student stud : students) {
                String sub_string = stud.getName()+" "+ stud.getLastName()+" "+ stud.getJmbg()+" "+ stud.getIndex()
                                    +" "+ stud.getUserName()+" "+ stud.getPassword()+" "+ stud.getNumOfSubjects();
                for(int j = 0; j < stud.getNumOfSubjects(); j++){   
                    sub_string += " " +stud.getSubjects().get(j).getSubjectName() +  " " +stud.getSubjects().get(j).getNumberOfParts();
                    
                    for(int i = 0; i < stud.getSubjects().get(j).getNumberOfParts(); i++){
                        sub_string+=" " + stud.getSubjects().get(j).getPartsName().get(i);
                    }
                    
                    for(int i = 0; i < stud.getSubjects().get(j).getNumberOfParts(); i++){
                        sub_string+=" " + stud.getSubjects().get(j).getMaxPoints().get(i);
                    }
                    for(int i = 0; i < stud.getSubjects().get(j).getNumberOfParts(); i++){
                        sub_string+=" " + stud.getSubjects().get(j).getMinPoints().get(i);
                    }
                    for(int i = 0; i < stud.getSubjects().get(j).getNumberOfParts(); i++){
                        sub_string+=" " + stud.getSubjects().get(j).getObtainedPoints().get(i);
                    }
                    sub_string+=" " + stud.getSubjects().get(j).getGrade();
                }
                writer.write(sub_string);
                writer.newLine();
            }
        } catch (IOException e) {
            System.err.println("Error saving users: " + e.getMessage());
        }
    }
    private static boolean checkIndex(String index) {
        boolean temp1 = (index.length() == 7) ;
        if(temp1) System.out.println("1");
        boolean temp2 = (index.charAt(0) == 'e' || index.charAt(0) == 'E') ;
        if(temp2) System.out.println("2");
        
        boolean temp3 = index.charAt(1) == '1' || index.charAt(1) == '2' || index.charAt(1) == '3';
        if(temp3) System.out.println("3");
        boolean temp4 = index.charAt(2) == '/' || index.charAt(2) == '-';
        if(temp4) System.out.println("4");
        String year = new String();
        year = index.charAt(3) + "" + index.charAt(4) + "" + index.charAt(5) + ""  + index.charAt(6);
        System.out.println(year);
        boolean temp5 = Integer.parseInt(year) >= 2000 || Integer.parseInt(year) <= 2023;
        if(temp5) System.out.println("5");
        boolean temp = temp1 && temp2 && temp3 && temp4 && temp5;
        
        return temp;
    }
    
    private static boolean checkJmbg(String jmbg) {
        boolean temp1 = (jmbg.length() == 13) ;
        String day = jmbg.charAt(0) + "" + jmbg.charAt(1);
        String month = jmbg.charAt(2) + "" + jmbg.charAt(3);
        String year = jmbg.charAt(4) + "" + jmbg.charAt(5)+ "" + jmbg.charAt(6);
        
        int day_n = Integer.parseInt(day);
        int month_n = Integer.parseInt(month);
        int year_n = Integer.parseInt(year);
        System.out.println(day_n + " "+ month_n + " " + year_n);
       boolean temp31 = (month_n == 1) || (month_n == 3) || (month_n == 5) 
               || (month_n == 7) || (month_n == 8) || (month_n == 10) || 
               (month_n == 11) || (month_n == 12);
       boolean temp30 = (month_n == 4) || (month_n == 6) || (month_n == 9) || (month_n == 10);
       boolean temp28 = (month_n == 2);
       
       boolean temp_day_date = false;
       if(temp31 && (day_n <= 31)){
           temp_day_date = true;
       }
       if(temp30 && (day_n <= 30)){
           temp_day_date = true;
       }
       if(temp28 && (day_n <= 28)){
           temp_day_date = true;
       }
       
       boolean temp_year = (year_n >= 990) || (year_n <= 999);
       
       return (temp1 && temp_day_date && temp_year);
}
    
}


